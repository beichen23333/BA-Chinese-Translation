name: 反序列化部署

on:
  workflow_dispatch:
    inputs:
      region:
        description: '选择要部署的服务器（jp,cn,gl）'
        required: false
        default: 'all'
        type: string
  repository_dispatch:
    types: [run-deployment]

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码库
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: 获取消息
        id: parse-trigger
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            MESSAGE="${{ github.event.client_payload.regions }}"
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            MESSAGE="${{ inputs.region }}"
          else
            MESSAGE="all"
          fi
          
          MESSAGE=$(echo "$MESSAGE" | tr '[:upper:]' '[:lower:]')
          echo "message=${MESSAGE}" >> $GITHUB_ENV
          echo "Detected regions: ${MESSAGE}"

      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 运行日服反序列化
        if: contains(env.message, 'jp') || env.message == 'all'
        continue-on-error: true
        run: |
          echo "运行日服反序列化..."
          python -m regions.JP.setup_flatdata || echo "生成日服FL..."
          python -m regions.JP.download_files --env_file ./ba.env --output_dir ./downloads || echo "日服文件下载..."
          python -m unpack_excel_db --db_path ./downloads/ExcelDB.db --output_dir ./unpacked --flatbuffers_dir ./Extracted/FlatData || echo "日服反序列化..."
          BA_VERSION_NAME=$(grep 'BA_VERSION_NAME=' ./ba.env | cut -d '=' -f 2)
          python -m clean_json --output_dir ./unpacked --server 日服 --zip_path ./unpacked/日服${BA_VERSION_NAME}.zip || echo "日服过滤..."

      - name: 运行国服反序列化
        if: contains(env.message, 'cn') || env.message == 'all'
        continue-on-error: true
        run: |
          echo "运行国服反序列化..."
           # 国服存在加密，使用日服FL
           python -m regions.JP.setup_flatdata_jp || echo "国服存在加密，无法生成dump.cs，生成日服FL..."
           python -m regions.CN.download_files_cn --env_file ./ba.env --output_dir ./downloads || echo "国服文件下载..."
           python -m unpack_excel_db --db_path ./downloads/ExcelDB.db --output_dir ./unpacked --flatbuffers_dir ./Extracted/FlatData || echo "国服反序列化..."
           BA_VERSION_NAME_CN=$(grep 'BA_VERSION_NAME_CN=' ./ba.env | cut -d '=' -f 2)
           python -m clean_json --output_dir ./unpacked --server 国服 --zip_path ./unpacked/国服${BA_VERSION_NAME_CN}.zip || echo "国服过滤..."

      - name: 运行国际服反序列化
        if: contains(env.message, 'gl') || env.message == 'all'
        continue-on-error: true
        run: |
          echo "运行国际服反序列化..."
          python -m regions.GL.setup_flatdata_gl || echo "生成国际服FL..."
          python -m regions.GL.download_files_gl --env_file ./ba.env --output_dir ./downloads || echo "国际服文件下载..."
          python -m unpack_excel_db --db_path ./downloads/ExcelDB.db --output_dir ./unpacked --flatbuffers_dir ./Extracted/FlatData  || echo "国际服反序列化..."
          BA_VERSION_NAME_GL=$(grep 'BA_VERSION_NAME_GL=' ./ba.env | cut -d '=' -f 2)
          python -m clean_json --output_dir ./unpacked --server 国际服 --zip_path ./unpacked/国际服${BA_VERSION_NAME_GL}.zip || echo "国际服过滤..."

      - name: 提交变更
        continue-on-error: true
        env:
          TARGET_REPO_URL: https://x-access-token:${{ secrets.APK_SRC_REPO }}@github.com/beichen23333/BA-Assets-TableBundles.git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git clone "$TARGET_REPO_URL" BA-Assets-TableBundles
          cp -r ./unpacked/*.zip BA-Assets-TableBundles/
          cd BA-Assets-TableBundles
          git add .
          if git diff-index --quiet HEAD; then
            echo "无更改，跳过提交文件"
          else
            git commit -m "提交文件"
            git push origin
          fi

      - name: 运行对比
        if: contains(env.message, 'jp') || env.message == 'all'
        continue-on-error: true
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type": "Comparison"}'