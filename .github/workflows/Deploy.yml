name: Deploy File
on:
  workflow_dispatch:
  push:
  repository_dispatch:
    types: [run-deployment]
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies from requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check message and run corresponding tasks
        run: |
          message=${{ github.event.client_payload.message }}
          if [ "$message" == "jp" ]; then
            python -m regions.JP.setup_flatdata
            python -m regions.JP.download_files --env_file ./ba.env --output_dir ./downloads
            python -m unpack_excel_db --db_path ./downloads/ExcelDB.db --output_dir ./unpacked --flatbuffers_dir ./Extracted/FlatData --zip_path ./unpacked/日服原版DB.zip
          elif [ "$message" == "cn" ]; then
            python -m regions.CN.setup_flatdata_cn
            python -m regions.CN.download_files_cn --env_file ./ba.env --output_dir ./downloads
            python -m unpack_excel_db --db_path ./downloads/ExcelDB.db --output_dir ./unpacked --flatbuffers_dir ./Extracted/FlatData --zip_path ./unpacked/国服原版DB.zip
          elif [ "$message" == "gl" ]; then
            python -m regions.GL.setup_flatdata_gl
            python -m regions.GL.download_files_gl --env_file ./ba.env --output_dir ./downloads
            python -m unpack_excel_db --db_path ./downloads/ExcelDB.db --output_dir ./unpacked --flatbuffers_dir ./Extracted/FlatData --zip_path ./unpacked/国际服原版DB.zip
          else
            echo "Unknown message: $message"
          fi

      - name: Check file size and skip if over 100MB
        run: |
          MAX_SIZE=$((100 * 1024 * 1024))
          for file in ./unpacked/*.json; do
            if [ -f "$file" ]; then
              filesize=$(stat -c%s "$file")
              if [ "$filesize" -gt "$MAX_SIZE" ]; then
                echo "File $file is larger than 100MB. Skipping."
                rm "$file"
              fi
            fi
          done

      - name: Commit and push generated files
        env:
          TARGET_REPO_URL: https://x-access-token:${{ secrets.APK_SRC_REPO }}@github.com/beichen23333/BA-Assets-TableBundles.git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git clone "$TARGET_REPO_URL" BA-Assets-TableBundles
          cp -r ./unpacked/*.zip BA-Assets-TableBundles/

          cd BA-Assets-TableBundles
          git add .
          if git diff-index --quiet HEAD; then
            echo "No changes detected. Skipping commit."
          else
            git commit -m "Update"
            git push origin
          fi
