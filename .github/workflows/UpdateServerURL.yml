name: Update BA Server Config Url

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force run all regions'
        required: false
        default: false
        type: boolean
  push:
    paths:
      - 'ba.env'

permissions:
  contents: write

jobs:
  analyze_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Detect changes
        id: detect
        run: |
          # 区域行号映射配置
          declare -A region_map=(
            ["1"]="jp_url" ["2"]="jp_catalog" ["3"]="jp_vercode" ["4"]="jp_vername"
            ["5"]="cn_url" ["6"]="cn_catalog" ["7"]="cn_vercode" ["8"]="cn_vername"
            ["9"]="gl_url" ["10"]="gl_catalog" ["11"]="gl_vercode" ["12"]="gl_vername"
          )

          git add ba.env
          if git diff --cached --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "::notice::No changes detected in ba.env"
            exit 0
          fi

          # 获取变更行号（增强兼容性）
          changed_lines=$(git diff --cached -U0 ba.env | \
                         grep -E '^\+[^\+]' | \
                         awk -F: '/^\+[^\+]/ {print $1}' | \
                         sort -nu)

          echo "::group::变更诊断报告"
          echo "变更行号: ${changed_lines}"
          echo "变更内容:"
          git diff --cached -U0 ba.env
          echo "::endgroup::"

          # 检测受影响区域
          declare -A affected_regions
          for line in $changed_lines; do
            if [[ -v "region_map[$line]" ]]; then
              region=${region_map[$line]%%_*}
              affected_regions[$region]=1
              echo "行 ${line} 变更 → ${region}区域 (${region_map[$line]})"
            fi
          done

          if [ ${#affected_regions[@]} -eq 0 ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "::warning::无目标区域变更"
          else
            regions=$(IFS=,; echo "${!affected_regions[*]}")
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "regions=${regions}" >> $GITHUB_OUTPUT
            echo "::notice::需要更新的区域: ${regions}"
          fi

      - name: Run updates
        if: steps.detect.outputs.changed == 'true' || inputs.force_run
        env:
          TARGET_REGIONS: ${{ steps.detect.outputs.regions || 'jp,cn,gl' }}
        run: |
          echo "::group::区域更新执行"
          [[ "$TARGET_REGIONS" =~ "jp" ]] && {
            echo "执行JP区域更新..."
            python -m regions.JP.update_urls ba.env server-info.json
          }
          
          [[ "$TARGET_REGIONS" =~ "cn" ]] && {
            echo "执行CN区域更新..."
            python -m regions.CN.CN_run ba.env server-info.json
          }
          
          [[ "$TARGET_REGIONS" =~ "gl" ]] && {
            echo "执行GL区域更新..."
            python -m regions.GL.GL_run ba.env server-info.json
          }
          echo "::endgroup::"

      - name: Commit changes
        if: steps.detect.outputs.changed == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git commit -m "自动更新: ${{ steps.detect.outputs.regions }}区域配置"
          git push

      - name: Trigger deployment
        if: steps.detect.outputs.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_REGIONS: ${{ steps.detect.outputs.regions }}
        run: |
          echo "::group::触发部署工作流"
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/dispatches" \
            -d '{
              "event_type": "run-deployment",
              "client_payload": {
                "regions": "'$TARGET_REGIONS'",
                "trigger_time": "'$(date -u +"%FT%TZ")'"
              }
            }'
          echo "已触发 $TARGET_REGIONS 区域部署"
          echo "::endgroup::"
