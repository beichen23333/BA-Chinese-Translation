name: Update Yostar Server URL

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:
permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies from requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run update_urls
        run: |
          python -m BA_Chinese_Translation.regions.JP.update_urls ba.env server-info.json

      - name: Run update_urls_cn
        run: |
          python -m BA_Chinese_Translation.regions.CN.update_urls_cn ba.env server-info.json

      - name: Run update_urls_gl
        run: |
          python -m BA_Chinese_Translation.regions.GL.update_urls_gl ba.env server-info.json

      - name: Check if ba.env was modified and detect which lines changed
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add ba.env
          if git diff --cached --quiet; then
            echo "没有检测到更新，跳过提交"
            echo "update_detected=false" >> $GITHUB_ENV
          else
            echo "检测到服务器URL更新，正在更新ba.env网址..."
            echo "update_detected=true" >> $GITHUB_ENV
            # 检测ba.env文件的变动行号
            changed_lines=$(git diff --cached --unified=0 ba.env | grep '^+' | grep -v '^\+\+\+' | nl -w2 -s' ' | cut -d' ' -f1)
            echo "changed_lines=$changed_lines" >> $GITHUB_ENV
          fi

      - name: Push updated server info JSON to current repository
        if: env.update_detected == 'true'
        run: |
          git commit -m "更新服务器URL"
          git push origin HEAD

      - name: Trigger Deploy Workflow and send message based on changed lines
        if: env.update_detected == 'true'
        run: |
          # 根据变动的行号发送不同的信息
          changed_lines=${{ env.changed_lines }}
          message=""
          for line in $changed_lines; do
            if [[ $line -ge 1 && $line -le 4 ]]; then
              message="jp"
              break
            elif [[ $line -ge 5 && $line -le 8 ]]; then
              message="cn"
              break
            elif [[ $line -ge 9 && $line -le 12 ]]; then
              message="gl"
              break
            fi
          done
          echo "message=$message" >> $GITHUB_ENV

          # 触发部署工作流并发送信息
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type": "run-deployment", "client_payload": {"message": "${{ env.message }}"}}'
