name: 更新BA服务器链接

on:
  schedule:
    - cron: "0 * * * *"

  workflow_dispatch:
    inputs:
      deploy_deserialize:
        description: '是否部署反序列化？'
        required: false
        type: boolean
        default: true

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码库
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 2

      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: 安装依赖
        run: |
          pip install -r requirements.txt
          echo "依赖安装完成"

      - name: 克隆仓库到临时目录
        run: |
          git clone https://x-access-token:${{ secrets.APK_SRC_REPO }}@github.com/beichen23333/BA-Chinese-Translation-A.git temp-repo

      - name: 合并内容到当前目录
        run: |
          rsync -a --remove-source-files temp-repo/ ./
          rm -rf temp-repo

      - name: 备份旧ba.env
        run: cp ba.env ba.env.old || true

      - name: 更新日服
        continue-on-error: true
        run: python -m regions.JP.update_urls ba.env server-info.json

      - name: 更新国服
        continue-on-error: true
        run: timeout 240 python -m regions.CN.CN_run ba.env server-info.json || true

      - name: 更新国际服
        continue-on-error: true
        run: python -m regions.GL.GL_run ba.env server-info.json

      - name: 检测变更
        id: diff
        run: bash .github/scripts/changes.sh ba.env.old ba.env

      - name: 调试输出
        run: |
          echo "Changed: ${{ steps.diff.outputs.changed }}"
          echo "Regions: ${{ steps.diff.outputs.regions }}"
          echo "JP: ${{ steps.diff.outputs.JP }}"
          echo "CN: ${{ steps.diff.outputs.CN }}"
          echo "GL: ${{ steps.diff.outputs.GL }}"

      - name: 提交并推送
        if: steps.diff.outputs.changed == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add ba.env
          git commit -m "自动更新: ${{ steps.diff.outputs.regions }}"
          git push origin HEAD

      - name: 触发部署
        if: steps.diff.outputs.changed == 'true' && (github.event_name == 'schedule' || github.event.inputs.deploy_deserialize == 'true')
        run: |
          curl -sS -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/dispatches" \
            -d '{
              "event_type": "反序列化部署",
              "client_payload": {
                "JP": ${{ fromJson(steps.diff.outputs.JP) }},
                "CN": ${{ fromJson(steps.diff.outputs.CN) }},
                "GL": ${{ fromJson(steps.diff.outputs.GL) }},
                "DB": true,
                "Table": true,
                "source": "auto-updater",
                "timestamp": "'$(date -u +"%FT%TZ")'"
              }
            }'
